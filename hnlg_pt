0#coding=utf-8
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
import requests
import pymysql
import docx
import time
import re
from bs4 import BeautifulSoup
from selenium.webdriver.common.action_chains import ActionChains
from selenium import webdriver
import sys
reload(sys)
sys.setdefaultencoding( "utf-8" )
url="https://zk.scutde.net/loginController.do?login"
url2="https://zk.scutde.net/loginController.do?checkuser"
url3="https://zk.scutde.net/courseController.do?gotoCourse&courseId=ff8080814c0d20ba014c0d58e08404b8&projectId=402881994d793b84014d7b11354d1001"

options = webdriver.ChromeOptions()
options.add_argument('user-agent="Mozilla/5.0 (iPod; U; CPU iPhone OS 2_1 like Mac OS X; answer_optionid_No-jp) AppleWebKit/525.18.1 (KHTML, like Gecko) Version/3.1.1 Mobile/5F137 Safari/525.20"')
con = pymysql.connect(host='127.0.0.1', port=3306,
                      db='hnlg', user='root',
                      passwd='', charset='utf8')                           #数据库连接配置
def one():
    driver = webdriver.Chrome(chrome_options=options)                      #加入浏览器请求头
    driver.maximize_window()                                               #设置浏览器窗口最大
    driver.get(url)
    time.sleep(7)
    driver.find_element_by_id('loginId').send_keys('')   #定位并输入用户名
    driver.find_element_by_id('passdword').send_keys('')         #定位并输入密码
    driver.find_element_by_id('but_login').click()
    time.sleep(7)
    print "登录成功"
    try:
        driver.find_element_by_class_name("ui_state_highlight").click()    #点击网页弹出的弹框
        time.sleep(2)
    except:
        pass
    class_text=driver.find_element_by_xpath("//*[@id='ff8080814c0d20ba014c0d58c828043c']/td[6]/label") #随便双击一下课程框的内容
    ActionChains(driver).double_click(class_text).perform()											   #随便双击一下课程框的内容
    class_name=r"//*[@id='ff8080814c0d20ba014c0d58b9d603f8']/td[3]/a"                                  #！！！！！！选择课程
    driver.find_element_by_xpath(class_name).click() 												   #！！！！！！选择课程
    time.sleep(7)
    all_handles = driver.window_handles                                                                #切换窗口
    driver.switch_to.window(all_handles[-1])													       #切换到弹出的窗口
    print("切换窗口")
    time.sleep(5)
    Course_chapter = driver.find_elements_by_name('catalogLi')                                         #循环章节
    for Course in Course_chapter:
        print Course
        if Course.get_attribute("id") != Course_chapter[0].get_attribute("id"):						       #去掉第一个无用的章节
            try:
                x=driver.find_element_by_id(Course.get_attribute("id"))
                ActionChains(driver).double_click(x).perform()								           #双击章节
            except:
                print "crorr"
                pass 

            time.sleep(2)
            Course_name=driver.find_element_by_class_name("list-title").text                          #章节名
            print Course_name
            try:
                driver.find_element_by_id("aAnswer_divinBtn").click()                                          #点击重新开始按钮
            except:
                driver.find_element_by_xpath("//*[@id='player']/div[3]/div/div[1]/div[2]").click()     #或者点击开始答题按钮

            time.sleep(3)
            answer = {}
            mysql_answer = []
            subject_No=driver.find_element_by_id("allQuestionCount").text                         #获取题目数量
            for No in range(int(subject_No)):
                soup = BeautifulSoup(driver.page_source)
                subject=driver.find_element_by_class_name("answer-content").text                  #获取题目
                subject=subject[2:]																  #去掉题目的编号
                print subject
                Answer_options = soup.find_all("div", class_="option")									      #获取所有答案选型
                for Answer_option in Answer_options:
                    try:
                        print("选择题的答案选型获取")
                        Answer_div=Answer_option.contents[2]
                        Answer_text=Answer_div.get_text()													       #获取选项的文字
                        Answer_code = Answer_option.contents[1]
                        answer[Answer_text]=Answer_code['optionid']
                        print(Answer_div)
                        print(Answer_text)
                        print(Answer_code['optionid'])

                    except:
                        Answer_div=Answer_option.contents[2]
                        Answer_code=Answer_option.contents[1]
                        answer[Answer_div]=Answer_code['optionid']
                        print(Answer_div)
                        print(Answer_code['optionid'])

                    try:
                        with con.cursor() as cursor:
                        # 执行SQL语句
                            cursor.execute('SET CHARACTER SET utf8;')
                            sql_text = "select * from timu where timua like '%%%s'" % (subject.encode('utf-8'))
                            cursor.execute(sql_text)
                            # 获取所有记录列表
                            results = cursor.fetchall()
                            for row in results:                                      #读取数据库中的答案，并将答案放入mysql_answer列表里
                                Answer_one = row[2].decode("utf-8")
                                mysql_answer.append(Answer_one)
                                Answer_two = row[3].decode("utf-8")
                                mysql_answer.append(Answer_two)
                                Answer_three = row[4].decode("utf-8")
                                mysql_answer.append(Answer_three)
                                Answer_four = row[5].decode("utf-8")
                                mysql_answer.append(Answer_four)
                        con.commit()
                    except:
                        print("Error: unable to fetch data")

                for web_answer in answer:											#判断网页中的答案选择在数据中是否存在，如果存在，则点击答案选项
                   if web_answer in mysql_answer:
                        answer_optionid_No=str("div[optionid='%s']"%answer[web_answer])
                        print(answer_optionid_No)
                        print(type(answer_optionid_No))
                        driver.find_element_by_css_selector(answer_optionid_No).click()
                answer={}															#清空列表和字典，循环下一题
                mysql_answer=[]
                time.sleep(0.5)
                print("点击提交")
                driver.find_element_by_id("submitBtn").click()                    #双击下一题
                try:
                 
                    WebDriverWait(driver,2).until(lambda x:x.find_element_by_id("yesBtn")).click()#为答题完成，会出现是否提交的弹框
                except:
                    pass



one()
